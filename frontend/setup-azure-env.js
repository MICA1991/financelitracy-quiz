#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import readline from 'readline';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üîß Azure AD Environment Setup for Finance Quiz App');
console.log('==================================================\n');

console.log('This script will help you create a .env file with your Azure AD configuration.');
console.log('Make sure you have completed the Azure AD app registration first.\n');

console.log('üìã Prerequisites:');
console.log('1. Go to Azure Portal (https://portal.azure.com)');
console.log('2. Navigate to "Azure Active Directory" > "App registrations"');
console.log('3. Create a new app registration or use an existing one');
console.log('4. Copy the Application (Client) ID and Directory (Tenant) ID\n');

const questions = [
  {
    name: 'clientId',
    message: 'Enter your Azure AD Application (Client) ID: ',
    validate: (input) => {
      const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
      return uuidRegex.test(input) || 'Please enter a valid UUID format (e.g., 12345678-1234-1234-1234-123456789012)';
    }
  },
  {
    name: 'tenantId',
    message: 'Enter your Azure AD Directory (Tenant) ID: ',
    validate: (input) => {
      const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
      return uuidRegex.test(input) || 'Please enter a valid UUID format (e.g., 87654321-4321-4321-4321-210987654321)';
    }
  },
  {
    name: 'redirectUri',
    message: 'Enter your redirect URI (default: http://localhost:5173): ',
    default: 'http://localhost:5173',
    validate: (input) => {
      return input.startsWith('http://') || input.startsWith('https://') || 'Please enter a valid URL starting with http:// or https://';
    }
  }
];

const envContent = `# Azure AD Configuration
# Generated by setup script on ${new Date().toISOString()}

VITE_AZURE_CLIENT_ID=${questions[0].name}
VITE_AZURE_TENANT_ID=${questions[1].name}
VITE_AZURE_REDIRECT_URI=${questions[2].name}

# Make sure to add this redirect URI to your Azure AD app registration
# Go to Azure Portal > App registrations > Your App > Authentication > Add platform > Single-page application
`;

async function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question.message, (answer) => {
      const input = answer.trim() || question.default || '';
      
      if (question.validate) {
        const validation = question.validate(input);
        if (validation !== true) {
          console.log(`‚ùå ${validation}`);
          resolve(askQuestion(question));
          return;
        }
      }
      
      resolve(input);
    });
  });
}

async function main() {
  try {
    const answers = {};
    
    for (const question of questions) {
      answers[question.name] = await askQuestion(question);
    }
    
    const envPath = path.join(__dirname, '.env');
    const finalEnvContent = envContent
      .replace(questions[0].name, answers.clientId)
      .replace(questions[1].name, answers.tenantId)
      .replace(questions[2].name, answers.redirectUri);
    
    fs.writeFileSync(envPath, finalEnvContent);
    
    console.log('\n‚úÖ Environment file created successfully!');
    console.log(`üìÅ File location: ${envPath}`);
    console.log('\nüìã Next steps:');
    console.log('1. Make sure your Azure AD app registration has the correct redirect URI');
    console.log('2. Grant admin consent for API permissions in Azure AD');
    console.log('3. Start your development server: npm run dev');
    console.log('4. Test the Microsoft login functionality');
    
  } catch (error) {
    console.error('‚ùå Error creating environment file:', error.message);
  } finally {
    rl.close();
  }
}

main(); 